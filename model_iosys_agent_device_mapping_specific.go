/*
Eliona REST API

The Eliona REST API enables unified access to the resources and data of an Eliona environment.

API version: 2.4.12
Contact: hello@eliona.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the IosysAgentDeviceMappingSpecific type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IosysAgentDeviceMappingSpecific{}

// IosysAgentDeviceMappingSpecific Specific mapping for IOSYS agents
type IosysAgentDeviceMappingSpecific struct {
	IosVar         NullableString  `json:"iosVar,omitempty"`
	IosType        NullableString  `json:"iosType,omitempty"`
	Down           NullableBool    `json:"down,omitempty"`
	Scale          NullableFloat64 `json:"scale,omitempty"`
	Zero           NullableFloat64 `json:"zero,omitempty"`
	Mask           []int64         `json:"mask,omitempty"`
	MaskAttributes []string        `json:"maskAttributes,omitempty"`
	DeadTime       NullableInt32   `json:"deadTime,omitempty"`
	DeadBand       NullableFloat64 `json:"deadBand,omitempty"`
	Filter         NullableString  `json:"filter,omitempty"`
	Tau            NullableFloat64 `json:"tau,omitempty"`
}

// NewIosysAgentDeviceMappingSpecific instantiates a new IosysAgentDeviceMappingSpecific object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIosysAgentDeviceMappingSpecific() *IosysAgentDeviceMappingSpecific {
	this := IosysAgentDeviceMappingSpecific{}
	var down bool = false
	this.Down = *NewNullableBool(&down)
	return &this
}

// NewIosysAgentDeviceMappingSpecificWithDefaults instantiates a new IosysAgentDeviceMappingSpecific object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIosysAgentDeviceMappingSpecificWithDefaults() *IosysAgentDeviceMappingSpecific {
	this := IosysAgentDeviceMappingSpecific{}
	var down bool = false
	this.Down = *NewNullableBool(&down)
	return &this
}

// GetIosVar returns the IosVar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetIosVar() string {
	if o == nil || isNil(o.IosVar.Get()) {
		var ret string
		return ret
	}
	return *o.IosVar.Get()
}

// GetIosVarOk returns a tuple with the IosVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetIosVarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IosVar.Get(), o.IosVar.IsSet()
}

// HasIosVar returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasIosVar() bool {
	if o != nil && o.IosVar.IsSet() {
		return true
	}

	return false
}

// SetIosVar gets a reference to the given NullableString and assigns it to the IosVar field.
func (o *IosysAgentDeviceMappingSpecific) SetIosVar(v string) {
	o.IosVar.Set(&v)
}

// SetIosVarNil sets the value for IosVar to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetIosVarNil() {
	o.IosVar.Set(nil)
}

// UnsetIosVar ensures that no value is present for IosVar, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetIosVar() {
	o.IosVar.Unset()
}

// GetIosType returns the IosType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetIosType() string {
	if o == nil || isNil(o.IosType.Get()) {
		var ret string
		return ret
	}
	return *o.IosType.Get()
}

// GetIosTypeOk returns a tuple with the IosType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetIosTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IosType.Get(), o.IosType.IsSet()
}

// HasIosType returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasIosType() bool {
	if o != nil && o.IosType.IsSet() {
		return true
	}

	return false
}

// SetIosType gets a reference to the given NullableString and assigns it to the IosType field.
func (o *IosysAgentDeviceMappingSpecific) SetIosType(v string) {
	o.IosType.Set(&v)
}

// SetIosTypeNil sets the value for IosType to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetIosTypeNil() {
	o.IosType.Set(nil)
}

// UnsetIosType ensures that no value is present for IosType, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetIosType() {
	o.IosType.Unset()
}

// GetDown returns the Down field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetDown() bool {
	if o == nil || isNil(o.Down.Get()) {
		var ret bool
		return ret
	}
	return *o.Down.Get()
}

// GetDownOk returns a tuple with the Down field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetDownOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Down.Get(), o.Down.IsSet()
}

// HasDown returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasDown() bool {
	if o != nil && o.Down.IsSet() {
		return true
	}

	return false
}

// SetDown gets a reference to the given NullableBool and assigns it to the Down field.
func (o *IosysAgentDeviceMappingSpecific) SetDown(v bool) {
	o.Down.Set(&v)
}

// SetDownNil sets the value for Down to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetDownNil() {
	o.Down.Set(nil)
}

// UnsetDown ensures that no value is present for Down, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetDown() {
	o.Down.Unset()
}

// GetScale returns the Scale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetScale() float64 {
	if o == nil || isNil(o.Scale.Get()) {
		var ret float64
		return ret
	}
	return *o.Scale.Get()
}

// GetScaleOk returns a tuple with the Scale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetScaleOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scale.Get(), o.Scale.IsSet()
}

// HasScale returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasScale() bool {
	if o != nil && o.Scale.IsSet() {
		return true
	}

	return false
}

// SetScale gets a reference to the given NullableFloat64 and assigns it to the Scale field.
func (o *IosysAgentDeviceMappingSpecific) SetScale(v float64) {
	o.Scale.Set(&v)
}

// SetScaleNil sets the value for Scale to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetScaleNil() {
	o.Scale.Set(nil)
}

// UnsetScale ensures that no value is present for Scale, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetScale() {
	o.Scale.Unset()
}

// GetZero returns the Zero field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetZero() float64 {
	if o == nil || isNil(o.Zero.Get()) {
		var ret float64
		return ret
	}
	return *o.Zero.Get()
}

// GetZeroOk returns a tuple with the Zero field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetZeroOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zero.Get(), o.Zero.IsSet()
}

// HasZero returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasZero() bool {
	if o != nil && o.Zero.IsSet() {
		return true
	}

	return false
}

// SetZero gets a reference to the given NullableFloat64 and assigns it to the Zero field.
func (o *IosysAgentDeviceMappingSpecific) SetZero(v float64) {
	o.Zero.Set(&v)
}

// SetZeroNil sets the value for Zero to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetZeroNil() {
	o.Zero.Set(nil)
}

// UnsetZero ensures that no value is present for Zero, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetZero() {
	o.Zero.Unset()
}

// GetMask returns the Mask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetMask() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.Mask
}

// GetMaskOk returns a tuple with the Mask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetMaskOk() ([]int64, bool) {
	if o == nil || isNil(o.Mask) {
		return nil, false
	}
	return o.Mask, true
}

// HasMask returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasMask() bool {
	if o != nil && isNil(o.Mask) {
		return true
	}

	return false
}

// SetMask gets a reference to the given []int64 and assigns it to the Mask field.
func (o *IosysAgentDeviceMappingSpecific) SetMask(v []int64) {
	o.Mask = v
}

// GetMaskAttributes returns the MaskAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetMaskAttributes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.MaskAttributes
}

// GetMaskAttributesOk returns a tuple with the MaskAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetMaskAttributesOk() ([]string, bool) {
	if o == nil || isNil(o.MaskAttributes) {
		return nil, false
	}
	return o.MaskAttributes, true
}

// HasMaskAttributes returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasMaskAttributes() bool {
	if o != nil && isNil(o.MaskAttributes) {
		return true
	}

	return false
}

// SetMaskAttributes gets a reference to the given []string and assigns it to the MaskAttributes field.
func (o *IosysAgentDeviceMappingSpecific) SetMaskAttributes(v []string) {
	o.MaskAttributes = v
}

// GetDeadTime returns the DeadTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetDeadTime() int32 {
	if o == nil || isNil(o.DeadTime.Get()) {
		var ret int32
		return ret
	}
	return *o.DeadTime.Get()
}

// GetDeadTimeOk returns a tuple with the DeadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetDeadTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeadTime.Get(), o.DeadTime.IsSet()
}

// HasDeadTime returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasDeadTime() bool {
	if o != nil && o.DeadTime.IsSet() {
		return true
	}

	return false
}

// SetDeadTime gets a reference to the given NullableInt32 and assigns it to the DeadTime field.
func (o *IosysAgentDeviceMappingSpecific) SetDeadTime(v int32) {
	o.DeadTime.Set(&v)
}

// SetDeadTimeNil sets the value for DeadTime to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetDeadTimeNil() {
	o.DeadTime.Set(nil)
}

// UnsetDeadTime ensures that no value is present for DeadTime, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetDeadTime() {
	o.DeadTime.Unset()
}

// GetDeadBand returns the DeadBand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetDeadBand() float64 {
	if o == nil || isNil(o.DeadBand.Get()) {
		var ret float64
		return ret
	}
	return *o.DeadBand.Get()
}

// GetDeadBandOk returns a tuple with the DeadBand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetDeadBandOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeadBand.Get(), o.DeadBand.IsSet()
}

// HasDeadBand returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasDeadBand() bool {
	if o != nil && o.DeadBand.IsSet() {
		return true
	}

	return false
}

// SetDeadBand gets a reference to the given NullableFloat64 and assigns it to the DeadBand field.
func (o *IosysAgentDeviceMappingSpecific) SetDeadBand(v float64) {
	o.DeadBand.Set(&v)
}

// SetDeadBandNil sets the value for DeadBand to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetDeadBandNil() {
	o.DeadBand.Set(nil)
}

// UnsetDeadBand ensures that no value is present for DeadBand, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetDeadBand() {
	o.DeadBand.Unset()
}

// GetFilter returns the Filter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetFilter() string {
	if o == nil || isNil(o.Filter.Get()) {
		var ret string
		return ret
	}
	return *o.Filter.Get()
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filter.Get(), o.Filter.IsSet()
}

// HasFilter returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasFilter() bool {
	if o != nil && o.Filter.IsSet() {
		return true
	}

	return false
}

// SetFilter gets a reference to the given NullableString and assigns it to the Filter field.
func (o *IosysAgentDeviceMappingSpecific) SetFilter(v string) {
	o.Filter.Set(&v)
}

// SetFilterNil sets the value for Filter to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetFilterNil() {
	o.Filter.Set(nil)
}

// UnsetFilter ensures that no value is present for Filter, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetFilter() {
	o.Filter.Unset()
}

// GetTau returns the Tau field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IosysAgentDeviceMappingSpecific) GetTau() float64 {
	if o == nil || isNil(o.Tau.Get()) {
		var ret float64
		return ret
	}
	return *o.Tau.Get()
}

// GetTauOk returns a tuple with the Tau field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IosysAgentDeviceMappingSpecific) GetTauOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tau.Get(), o.Tau.IsSet()
}

// HasTau returns a boolean if a field has been set.
func (o *IosysAgentDeviceMappingSpecific) HasTau() bool {
	if o != nil && o.Tau.IsSet() {
		return true
	}

	return false
}

// SetTau gets a reference to the given NullableFloat64 and assigns it to the Tau field.
func (o *IosysAgentDeviceMappingSpecific) SetTau(v float64) {
	o.Tau.Set(&v)
}

// SetTauNil sets the value for Tau to be an explicit nil
func (o *IosysAgentDeviceMappingSpecific) SetTauNil() {
	o.Tau.Set(nil)
}

// UnsetTau ensures that no value is present for Tau, not even an explicit nil
func (o *IosysAgentDeviceMappingSpecific) UnsetTau() {
	o.Tau.Unset()
}

func (o IosysAgentDeviceMappingSpecific) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IosysAgentDeviceMappingSpecific) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IosVar.IsSet() {
		toSerialize["iosVar"] = o.IosVar.Get()
	}
	if o.IosType.IsSet() {
		toSerialize["iosType"] = o.IosType.Get()
	}
	if o.Down.IsSet() {
		toSerialize["down"] = o.Down.Get()
	}
	if o.Scale.IsSet() {
		toSerialize["scale"] = o.Scale.Get()
	}
	if o.Zero.IsSet() {
		toSerialize["zero"] = o.Zero.Get()
	}
	if o.Mask != nil {
		toSerialize["mask"] = o.Mask
	}
	if o.MaskAttributes != nil {
		toSerialize["maskAttributes"] = o.MaskAttributes
	}
	if o.DeadTime.IsSet() {
		toSerialize["deadTime"] = o.DeadTime.Get()
	}
	if o.DeadBand.IsSet() {
		toSerialize["deadBand"] = o.DeadBand.Get()
	}
	if o.Filter.IsSet() {
		toSerialize["filter"] = o.Filter.Get()
	}
	if o.Tau.IsSet() {
		toSerialize["tau"] = o.Tau.Get()
	}
	return toSerialize, nil
}

type NullableIosysAgentDeviceMappingSpecific struct {
	value *IosysAgentDeviceMappingSpecific
	isSet bool
}

func (v NullableIosysAgentDeviceMappingSpecific) Get() *IosysAgentDeviceMappingSpecific {
	return v.value
}

func (v *NullableIosysAgentDeviceMappingSpecific) Set(val *IosysAgentDeviceMappingSpecific) {
	v.value = val
	v.isSet = true
}

func (v NullableIosysAgentDeviceMappingSpecific) IsSet() bool {
	return v.isSet
}

func (v *NullableIosysAgentDeviceMappingSpecific) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIosysAgentDeviceMappingSpecific(val *IosysAgentDeviceMappingSpecific) *NullableIosysAgentDeviceMappingSpecific {
	return &NullableIosysAgentDeviceMappingSpecific{value: val, isSet: true}
}

func (v NullableIosysAgentDeviceMappingSpecific) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIosysAgentDeviceMappingSpecific) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
