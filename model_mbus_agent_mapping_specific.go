/*
Eliona API

API to access Eliona Smart Building Assistant

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// MbusAgentMappingSpecific Specific mapping for MBUS agents
type MbusAgentMappingSpecific struct {
	Field int32 `json:"field"`
	Scale NullableFloat64 `json:"scale,omitempty"`
	Zero NullableFloat64 `json:"zero,omitempty"`
}

// NewMbusAgentMappingSpecific instantiates a new MbusAgentMappingSpecific object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMbusAgentMappingSpecific(field int32) *MbusAgentMappingSpecific {
	this := MbusAgentMappingSpecific{}
	this.Field = field
	return &this
}

// NewMbusAgentMappingSpecificWithDefaults instantiates a new MbusAgentMappingSpecific object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMbusAgentMappingSpecificWithDefaults() *MbusAgentMappingSpecific {
	this := MbusAgentMappingSpecific{}
	return &this
}

// GetField returns the Field field value
func (o *MbusAgentMappingSpecific) GetField() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *MbusAgentMappingSpecific) GetFieldOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *MbusAgentMappingSpecific) SetField(v int32) {
	o.Field = v
}

// GetScale returns the Scale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MbusAgentMappingSpecific) GetScale() float64 {
	if o == nil || o.Scale.Get() == nil {
		var ret float64
		return ret
	}
	return *o.Scale.Get()
}

// GetScaleOk returns a tuple with the Scale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MbusAgentMappingSpecific) GetScaleOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scale.Get(), o.Scale.IsSet()
}

// HasScale returns a boolean if a field has been set.
func (o *MbusAgentMappingSpecific) HasScale() bool {
	if o != nil && o.Scale.IsSet() {
		return true
	}

	return false
}

// SetScale gets a reference to the given NullableFloat64 and assigns it to the Scale field.
func (o *MbusAgentMappingSpecific) SetScale(v float64) {
	o.Scale.Set(&v)
}
// SetScaleNil sets the value for Scale to be an explicit nil
func (o *MbusAgentMappingSpecific) SetScaleNil() {
	o.Scale.Set(nil)
}

// UnsetScale ensures that no value is present for Scale, not even an explicit nil
func (o *MbusAgentMappingSpecific) UnsetScale() {
	o.Scale.Unset()
}

// GetZero returns the Zero field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MbusAgentMappingSpecific) GetZero() float64 {
	if o == nil || o.Zero.Get() == nil {
		var ret float64
		return ret
	}
	return *o.Zero.Get()
}

// GetZeroOk returns a tuple with the Zero field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MbusAgentMappingSpecific) GetZeroOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zero.Get(), o.Zero.IsSet()
}

// HasZero returns a boolean if a field has been set.
func (o *MbusAgentMappingSpecific) HasZero() bool {
	if o != nil && o.Zero.IsSet() {
		return true
	}

	return false
}

// SetZero gets a reference to the given NullableFloat64 and assigns it to the Zero field.
func (o *MbusAgentMappingSpecific) SetZero(v float64) {
	o.Zero.Set(&v)
}
// SetZeroNil sets the value for Zero to be an explicit nil
func (o *MbusAgentMappingSpecific) SetZeroNil() {
	o.Zero.Set(nil)
}

// UnsetZero ensures that no value is present for Zero, not even an explicit nil
func (o *MbusAgentMappingSpecific) UnsetZero() {
	o.Zero.Unset()
}

func (o MbusAgentMappingSpecific) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["field"] = o.Field
	}
	if o.Scale.IsSet() {
		toSerialize["scale"] = o.Scale.Get()
	}
	if o.Zero.IsSet() {
		toSerialize["zero"] = o.Zero.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMbusAgentMappingSpecific struct {
	value *MbusAgentMappingSpecific
	isSet bool
}

func (v NullableMbusAgentMappingSpecific) Get() *MbusAgentMappingSpecific {
	return v.value
}

func (v *NullableMbusAgentMappingSpecific) Set(val *MbusAgentMappingSpecific) {
	v.value = val
	v.isSet = true
}

func (v NullableMbusAgentMappingSpecific) IsSet() bool {
	return v.isSet
}

func (v *NullableMbusAgentMappingSpecific) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMbusAgentMappingSpecific(val *MbusAgentMappingSpecific) *NullableMbusAgentMappingSpecific {
	return &NullableMbusAgentMappingSpecific{value: val, isSet: true}
}

func (v NullableMbusAgentMappingSpecific) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMbusAgentMappingSpecific) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


